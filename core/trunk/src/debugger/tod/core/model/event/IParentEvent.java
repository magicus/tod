/*
 * Created on Nov 2, 2005
 */
package tod.core.model.event;

import java.util.List;

/**
 * An event that contains other events.
 * @author gpothier
 */
public interface IParentEvent extends ILogEvent
{
	/**
	 * Returns the list of events that occured during the execution of the
	 * behavior corresponding to this event.
	 * @see ILogEvent#getParent()
	 */
	public List<ILogEvent> getChildren();
	
	/**
	 * Returns the number of children of this event.
	 */
	public int getChildrenCount();

	
	/**
	 * Indicates if this event is the direct parent of its children.
	 * A call to an instrumented behavior from another instrumented
	 * behavior results in a direct parent event: children events are
	 * those that occur during the execution of the called behavior.
	 * <br/>
	 * On the other hand, call to a non-instrumented behavior from
	 * an instrumented behavior results in an indirect parent event:
	 * the non-instrumented behavior will not generate any event, but it
	 * might call an instrumented behavior; the events generated by the latter
	 * will appear as children of the parent event, although they occured
	 * deeper in the control flow.
	 */
	public boolean isDirectParent();

	/**
	 * Returns the timestamp of the first event of the set of events
	 * comprised of this container and its contained events.
	 */
	public long getFirstTimestamp();
	
	/**
	 * Returns the timestamp of the last event of the set of events
	 * comprised of this container and its contained events.
	 */
	public long getLastTimestamp();
}
