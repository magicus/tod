/*
 * Created on Aug 24, 2006
 */
package tod.impl.dbgrid;

import java.rmi.Remote;
import java.rmi.RemoteException;

import tod.impl.common.EventCollector;
import tod.impl.dbgrid.aggregator.QueryAggregator;
import tod.impl.dbgrid.aggregator.RIQueryAggregator;
import tod.impl.dbgrid.dbnode.RIDatabaseNode;
import tod.impl.dbgrid.dispatcher.GridEventCollector;

/**
 * Remote interface of the grid master.
 * This is the entry point to the database grid.
 * Manages configuration and discovery of database nodes,
 * acts as a factory for {@link GridEventCollector}s
 * and {@link QueryAggregator}.
 * @author gpothier
 */
public interface RIGridMaster extends Remote
{
	/**
	 * Registers a node so that it can be used by the grid.
	 */
	public void registerNode(RIDatabaseNode aNode) throws RemoteException;
	
	/**
	 * Creates a new {@link EventCollector} that can receive events
	 * generated by a particular host.
	 * @param aHostId Id of the host that will send events to the collector.
	 * @return Port number of the new collector.
	 */
	public int createCollector(int aHostId) throws RemoteException;
	
	/**
	 * Returns the unique query aggregator attached to this master. 
	 */
	public RIQueryAggregator getAggregator() throws RemoteException;
}
